runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
setwd('/Users/hanif/Desktop/BoE/household-typology/')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?icon
?icon
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?$
runApp()
runApp()
runApp()
runApp()
?mainpanel
??mainpanel
runApp()
runApp()
runApp()
?radioButtons
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('gridExtra')
runApp()
runApp()
getwd()
dict <- read.csv('clusterdict.csv')
View(dict)
all_labels[[as.numeric(dict[dict$Year=='2009' & dict$Level=='Broad' & dict$Value==0,]$id)]]
dict$id <- c(1:nrow(dict))
View(dict)
all_labels<- c(c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Cluster 1','Cluster 2','Cluster 3','Cluster 4'),
c('Cluster 1','Others'),
c('Cluster 2','Others'),
c('Cluster 3','Others'),
c('Cluster 4','Others'),
c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Secure 1','Secure 2','Insecure 1','Insecure 2'),
c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Highly Secure','Secure but worried','Struggling to keep up','Falling behind'),
c('Highly Secure','Others'),
c('Secure but worried','Others'),
c('Struggling to keep up','Others'),
c('Falling behind','Others')
)
all_labels[[as.numeric(dict[dict$Year=='2009' & dict$Level=='Broad' & dict$Value==0,]$id)]]
all_labels[as.numeric(dict[dict$Year=='2009' & dict$Level=='Broad' & dict$Value==0,]$id)]
all_labels<- list(c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Cluster 1','Cluster 2','Cluster 3','Cluster 4'),
c('Cluster 1','Others'),
c('Cluster 2','Others'),
c('Cluster 3','Others'),
c('Cluster 4','Others'),
c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Secure 1','Secure 2','Insecure 1','Insecure 2'),
c('Secure','Insecure'),
c('Secure','Insecure'),
c('Insecure','Secure'),
c('Highly Secure','Secure but worried','Struggling to keep up','Falling behind'),
c('Highly Secure','Others'),
c('Secure but worried','Others'),
c('Struggling to keep up','Others'),
c('Falling behind','Others')
)
all_labels[1]
all_labels[[1]]
all_labels[[as.numeric(dict[dict$Year=='2009' & dict$Level=='Broad' & dict$Value==0,]$id)]]
View(dict)
all_labels[[as.numeric(dict[dict$Year=='2010' & dict$Level=='Broad' & dict$Value==2,]$id)]]
all_labels[[dict[dict$Year=='2010' & dict$Level=='Broad' & dict$Value==2,]$id]]
library(RColoBrewer)
install.packages(RColorBrewer)
install.packages('RColorBrewer')
brewer.pal(9,'Pu')
library(RColorBrewer)
brewer.pal(9,'Pu')
brewer.pal(9,'RdPu')
brewer.pal(9,'YlOrRd')
brewer.pal(9,'BuPu')
brewer.pal(9,'Greys')
allcolours<- list(c('#88419D','#FEB24C'),
c('#88419D','#969696'),
c('#FEB24C','#969696'),
c('#810F7C','#8C6BB1','#FED976','#FD8D3C'),
c('#810F7C','#969696'),
c('#8C6BB1','#969696'),
c('#FED976','#969696'),
c('#FD8D3C','#969696'),
c('#88419D','#FEB24C'),
c('#88419D','#969696'),
c('#FEB24C','#969696'),
c('#810F7C','#8C6BB1','#FED976','#FD8D3C'),
c('#88419D','#FEB24C'),
c('#88419D','#969696'),
c('#FEB24C','#969696'),
c('#810F7C','#8C6BB1','#FED976','#FD8D3C'),
c('#810F7C','#969696'),
c('#8C6BB1','#969696'),
c('#FED976','#969696'),
c('#FD8D3C','#969696')
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderText
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
levels(s2009$fihhyr_a)
levels(factor(s2009$fihhyr_a))
levels(factor(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))]))
as.numeric(levels(factor(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))])))
as.numeric(levels(factor(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))]))) + 500
runApp()
runApp()
as.numeric(factor(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))]))
as.numeric(as.character(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))]))
as.numeric(s2009$fihhyr_a[!(s2009$fihhyr_a %in% c("don't know","refused","not applicable"))])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(s2010$mds1,s2010$mds2)
which(s2010$mds2>0.2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plotter <- function(name,data,cluster){
data$newname <- data[,name]
data$newclust <- data[,cluster]
newdata <- data.table(data)
summary <- newdata[,list('freq'=.N),by=list(newname,newclust)]
summary$percentage <- 0
for (i in unique(summary$newclust)){
summary$percentage[summary$newclust==i] <- summary$freq[summary$newclust==i]/sum(summary$freq[summary$newclust==i])*100
}
h1 <- ggplot(data.frame(summary)) +
geom_bar(aes(x=factor(newname),y=percentage,fill=factor(newclust)),stat='identity',position='dodge') +
geom_text(aes(x=factor(newname),y=percentage,label=round(percentage,1),group=factor(newclust)),position=position_dodge(width=1),vjust=0) +
xlab(name) +
theme(axis.text.x=element_text(size=10,angle=20,vjust=0.5))
print(h1)
}
plotter('billscc',q2011,'clust4')
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd('/Users/hanif/Desktop/hh-typology/household-typology/')
runApp()
runApp()
runApp()
runApp()
setwd('/Users/hanif/Desktop/BoE/household-typology/')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('scale')
??scales
??guides
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?viewport
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?log
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?viewport
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?strsplit
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd('/Users/hanif/Desktop/hh-typology/household-typology/')
runApp()
runApp()
?adjust
??adjust
setwd('/Users/hanif/Desktop/BoE/household-typology/')
runApp()
runApp()
runApp()
?weights
runApp()
runApp()
??survey
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(`s2011`)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plotter('uncert',q2009,'clust4')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
?guides
runApp()
runApp()
runApp()
levels(factor(s2009$billscc))
levels(factor(s2010$billscc))
levels(factor(s2011$billscc))
runApp()
is.factor(s2009$billscc)
levels(s2009$billscc)
k =1
for (j in levels(s2009$billscc)){
if(k==1)
s2009$billscc[s2009$billscc==j] <- 'falling behind\non some'
k = k+1
}
s2009 <- read.csv('s2009.csv')
s2009$billscc <- as.character(s2009$billscc)
k =1
for (j in levels(factor(s2009$billscc))){
if(k==1)
s2009$billscc[s2009$billscc==j] <- 'falling behind\non some'
k = k+1
}
head(s2009$billscc)
s2009$billscc[1:100]
runApp()
library(shinyapps)
deployApp()
deployApp()
getwd()
shinyapps::setAccountInfo(name='hanifsamad', token='616FA4F5163A86DB48D4039C91B45EDE', secret='Y8XhAQ7193jaDUeQi3qMIe2LjTghv2Nw36MyMSJx')
rm(list=ls())
q()
